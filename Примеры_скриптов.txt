import MDM


# Отправить строку 'AT' интерфейсу АТ-команд в течение тайм-аута
a = MDM.send('AT', timeout)		# timeout = int(), измеряется в 1/10 секунды
#								  timeout: 0...32767

# Возвращается:		-1, если время ожидания (timeout) истекло
#					 1, если уложились
# Полученное значение присваивается переменной a


# Получить строку от интерфейса АТ-команд в течение времени timeout
MDM.receive(timeout)

# Полученное значение - первая полученная строка независимо от  timeout
# Возвращается строка с данными или пустая строка, если данные не были получены.

MDM.receive(15)		# получить строку от обработчика АТ-команд, ожидая 1,5 секунды, присвоить значение переменной a

# Если timeout >= 20 (2 с), использовать:
# цикл Python
# метод MDM.read()
# метод MOD.secCounter()


# Пример:
res = ''
timeout = MOD.secCounter() + TIMEOUT_VALUE
res = MDM.read() 
while((len(res) == 0) and (MOD.secCounter() < timeout)):
	res = res + MDM.read()


# Получить строку от интерфейса АТ-команд без ожидания
MDM.read()

# не имеет параметра для ввода
# Возвращаемое значение - строка Python, которая содержит данные. полученные в момент выполнения команды.
# Значение может быть пустым, если данные не были получены


# Отправить 1 байт интерфейсу АТ-команд
MDM.sendbyte(byte, timeout)

# byte = 0 или любой байт Python, который мы отправляем интерфейсу АТ-команд
# timeout = int() \(1/10)с - время ожидания отправки байта
# Возвращается -1, если время вышло  или 1, если всё ок

b = MDM.sendbyte(0x0d, 0)		# Отправить байт 0x0d (возврат каретки <CR>) обработчику АТ-команд без ожидания
								# и присвоить возвращённое значение переменной b

# Получить байт от интерфейса АТ-команд
MDM.receivebyte(timeout)


# Получить байт от интерфейса АТ-команд без ожидания
MDM.readbyte()


# Обнаружение носителя информации (Data Carrier Detect)
MDM.getDCD()

# Возвращает:
# 	0 - если DCD = OFF
# 	1 - если DCD = ON


# Получить Clear to Send (CTS) от интерфейса АТ-команд
MDM.getCTS()

# Возвращает:
# 	0 - если CTS = OFF
# 	1 - если CTS = ON


MDM.getDSR()			# Получить Data Set Ready (DSR)

MDM.getRI()				# Получить Ring Indicator (RI)

MDM.setRTS(RTS_value)	# Получить Request to Send

MDM.setDTR(DTR_value)	# Получить Data Terminal Ready


